Let's break down the **Write behavior** settings in **Azure Data Factory (ADF)** ‚Äî these are part of the **sink settings** in activities like **Copy Data**, and they control how data is written to the target/destination system.

---

## üñäÔ∏è **Write Behavior Options**

---

### 1. üîπ **Insert**

> **Simply inserts** new rows into the sink table or target location.

- ‚úÖ Use when:

  - You're **adding fresh data**.
  - No chance of duplicate rows.

- ‚ùå Doesn‚Äôt check for existing records.
- Common for:

  - Loading raw logs, transaction records, or historical data.

üß† Think of it as:

```sql
INSERT INTO table (col1, col2) VALUES (...)
```

---

### 2. üîπ **Upsert**

> **Insert or update** records based on a match condition (usually a key).

- ‚úÖ Use when:

  - You're syncing data that **may already exist**, and you want to **update it if it does**, or **insert it if it doesn‚Äôt**.

- Requires:

  - A **key column** to match (like `id`, `customer_id`, etc.)
  - ADF must support this operation for the sink (Azure SQL, Synapse, etc.)

üß† Think of it as:

```sql
IF EXISTS (SELECT * FROM table WHERE id = @id)
  UPDATE table SET ...
ELSE
  INSERT INTO table ...
```

---

### 3. üîπ **Stored Procedure**

> Data is written using a **user-defined stored procedure**.

- ‚úÖ Use when:

  - You need **custom business logic** on insert/update (e.g., validation, audit log).
  - You're targeting **Azure SQL, SQL Server**, or any sink that supports stored procedures.

- You define the procedure and **pass parameters or tables** to it from ADF.

üß† Example:

```sql
EXEC dbo.InsertSalesData @Region = 'East', @SalesAmount = 1000
```

- Also supports **table-valued parameters (TVPs)** for bulk inserts.

---

## üßæ Summary Table:

| Write Behavior       | Description                        | Good For                                |
| -------------------- | ---------------------------------- | --------------------------------------- |
| **Insert**           | Add new rows only                  | Clean new data, logs                    |
| **Upsert**           | Insert or update if match is found | Data sync, merge scenarios              |
| **Stored Procedure** | Call SQL proc with logic           | Complex validation, logging, pre-checks |

---

### ‚ö†Ô∏è Notes:

- Not all sinks support all behaviors. For example:

  - Blob storage ‚Üí Only supports **Insert**
  - Azure SQL DB ‚Üí Supports **Insert**, **Upsert**, **Stored Procedure**

- In **Mapping Data Flows**, similar behavior is controlled via **Alter Row transformation**

---
